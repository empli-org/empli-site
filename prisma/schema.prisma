// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Talent {
  id          String       @id @default(cuid())
  name        String
  lastname    String
  age         Int
  image       String
  skills      Skill[]
  role        Role[]
  yearsOfExp  Int
  contactInfo ContactInfo?
  socialInfo  SocialInfo?
  verified    Boolean      @default(false)

  userEmail String? @unique
}

model Role {
  id   String @id @default(cuid())
  name String

  talent   Talent? @relation(fields: [talentId], references: [id])
  talentId String?
}

model SocialInfo {
  id       String  @id @default(cuid())
  twitter  String?
  facebook String?
  linkedin String?
  website  String?

  talent    Talent?  @relation(fields: [talentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  talentId  String?  @unique
  company   Company? @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId String?  @unique
}

model ContactInfo {
  id        String   @id @default(cuid())
  phone     String?
  address   String?
  city      String?
  zip       String?
  country   String?
  talent    Talent?  @relation(fields: [talentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  talentId  String?  @unique
  company   Company? @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId String?  @unique
}

model Skill {
  id       String  @id @default(cuid())
  name     String
  talent   Talent? @relation(references: [id], fields: [talentId], onDelete: Cascade, onUpdate: Cascade)
  talentId String?
}

model Company {
  id          String       @id @default(cuid())
  name        String
  description String
  category    Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contactInfo ContactInfo?
  socialInfo  SocialInfo?
  jobs        Job[]
  plan        String?

  userEmail  String? @unique
  categoryId String
}

model Category {
  id        String    @id @default(cuid())
  name      String
  companies Company[]
}

model Job {
  id          String @id @default(cuid())
  code        String @unique
  title       String
  description String
  area        String
  type        String
  body        String
  requiredExp Int
  minRate     Float?
  maxRate     Float?

  company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId String
}
